GIT Homework 1

JSON
1. Create an external repository named JSON.
  New -> "JSON" -> Create repository

2. Clone the JSON repository to the local computer.
  git clone https://github.com/Saijentor/JSON.git

3. Create a “new.json” file inside the local JSON.
  touch new.json

4. Add the file to git.
  git add new.json

5. Commit the file.
  git commit -m "add new.json"

6. Send the file to an external GitHub repository.
  git push
 
7. Edit the contents of the file ”new.json" - write information about yourself (full name, age, number of pets, future desired salary). Write everything down in JSON  forma.
  vim new.json
 
8. Send the changes to an external repository.
  git commit -am "update new.json"
  git push
 
9. Create a preferences.json.
  touch preferences.json
 
10. To the preferences file.json add information about your preferences (Favorite movie, favorite TV series, favorite food, favorite time of year, party you would like to visit) in JSON format.
 vim preferences.json
 
11. Create a sklls file.json add information about the skills that will be studied in the course in JSON format.
  touch skills.json
  vim skills.json
 
12. Send 2 files to an external repository at once.
  git add .
  git commit -m "add preferences.json, skills.json"
  git push
 
13. Create a bug_report.json file on the web interface.
  Add file -> Create new file -> "bug_report.json" -> ...
 
14. Make Commit changes (save) changes on the web interface.
  ... "commit" -> Commit new file
 
15. Modify the bug_report file on the web interface.json, add a bug report in json format.
  bug_report.json -> edit this file -> ...
 
16. Make Commit changes (save) changes on the web interface.
  ... "Create bug report" -> Commit changes
 
17. Synchronize external and local JSON repository.
  git pull



XML
18. Create an external repository named XML.
  New -> "XML" -> Create repository

19. КClone the XML repository to the local computer.
  git clone https://github.com/Saijentor/XML.git

20. Create a file inside the local XML “new.xml ”.
  touch new.xml

21. Add a file under git.
  git add new.xml

22. Commit the file.
  git commit -m "add new.xml"

23. Send the file to an external GitHub repository.
  git push

24. dit the contents of the file “new.xml ” - write information about yourself (full name, age, number of pets, future desired salary). Write everything in XML format.
  vim new.xml

25. Send the changes to an external repository.
  git commit -am "update new.xml"
  git push

26. Create a file preferences.xml.
  touch preferences.xml

27. To the file preferences.xml add information about your preferences (Favorite movie, favorite TV series, favorite food, favorite time of year, the party you would like to visit) in XML format.
  vim preferences.xml

28. Create a file sklls.xml add information about the skills that will be studied in the course in XML format.
  touch skills.xml
  vim skills.xml

29. Make a commit in one line.
  git add . && git commit -m "add preferences.xml, skills.xml"

30. Send 2 files to an external repository at once.
  git push

31. Create a file on the web interface bug_report.xml.
  Add file -> Create new file -> "bug_report.xml" -> ...

32. Make Commit changes (save) changes on the web interface.
  ... "commit" -> Commit new file

33. Modify the file on the web interface bug_report.xml , add a bug report in XML format.
  bug_report.xml -> edit this file -> ...

34. Make Commit changes (save) changes on the web interface.
  ... "Create bug report" -> Commit changes

35. Synchronize external and local XML repository.
  git pull



TXT
36. Create an external repository called TXT.
  New -> "TXT" -> Create repository

37. Clone the TXT repository to the local computer.
  git clone https://github.com/Saijentor/TXT.git

38. Create a file inside the local TXT “new.txt ”.
  touch new.txt

39. Add a file under git.
  git add new.txt

40. Commit the file.
  git commit -m "add new.txt"

41. Send the file to an external GitHub repository.
  git push

42. Edit the contents of the file “new.txt ” - write information about yourself (full name, age, number of pets, future desired salary). Write everything in TXT format.
  vim new.txt

43. Send the changes to an external repository.
  git commit -am "update new.txt"
  git push

44. Create a file preferences.txt
  touch preferences.txt

45. To the file preferences.txt ” add information about your preferences (Favorite movie, favorite TV series, favorite food, favorite time of year, the party you would like to visit) in TXT format.
  vim preferences.txt

46. Create a file sklls.txt add information about the skills that will be studied on the course in TXT format.
  touch skills.txt
  vim skills.txt

47. Make a commit in one line.
  git add . && git commit -m "add preferences.txt, skills.txt"

48. Send 2 files to an external repository at once.
  git push

49. Create a file on the web interface bug_report.txt .
  Add file -> Create new file -> "bug_report.txt" -> ...

50. Make Commit changes (save) changes on the web interface.
  ... "commit" -> Commit new file

51. Modify the file on the web interface bug_report.txt , add a bug report in TXT format.
  bug_report.txt -> edit this file -> ...

52. Make Commit changes (save) changes on the web interface.
  ... "Create bug report" -> Commit changes

53. Synchronize the external and local TXT repository.
  git pull
